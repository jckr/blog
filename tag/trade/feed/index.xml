<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>trade &#8211; jeromecukier.net</title>
	<atom:link href="http://localhost/tag/trade/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>Just another WordPress site</description>
	<lastBuildDate>Mon, 09 Apr 2018 21:49:15 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.10</generator>
	<item>
		<title>La france qui exporte</title>
		<link>/2011/02/18/la-france-qui-exporte/</link>
		<comments>/2011/02/18/la-france-qui-exporte/#comments</comments>
		<pubDate>Fri, 18 Feb 2011 18:10:38 +0000</pubDate>
		<dc:creator><![CDATA[jerome]]></dc:creator>
				<category><![CDATA[data visualization]]></category>
		<category><![CDATA[protovis]]></category>
		<category><![CDATA[exports]]></category>
		<category><![CDATA[france]]></category>
		<category><![CDATA[maps]]></category>
		<category><![CDATA[trade]]></category>
		<category><![CDATA[treemaps]]></category>

		<guid isPermaLink="false">http://www.jeromecukier.net/?p=661</guid>
		<description><![CDATA[This week, I was made aware of a new set of maps by French ministry of Foreign Trade, called cartographie de la France qui exporte (map of France exports) (link). Since I&#8217;m interested in the topic and that I know that French public services have killer cartographers I was eager to see what was so <a class="read-more" href="/2011/02/18/la-france-qui-exporte/">&#8230;&#160;<span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<p>This week, I was made aware of a new set of maps by French ministry of Foreign Trade, called <em>cartographie de la France qui exporte</em> (map of France exports) (<a href="http://www.exporter.gouv.fr/exporter/Pages.aspx?iddoc=1821&#038;pex=1-2-40-926-1821">link</a>). Since I&#8217;m interested in the topic and that I know that French public services have killer cartographers I was eager to see what was so exciting about the first set of online maps on French exports. </p>
<p>I was a little underwhelmed to be honest. Online here meant static pdf files, although this is a dataset that just begs to be explored and manipulated.<br />
On top of that, those where basic choropleth maps with markers such as this one here:<br />
<a href="http://www.jeromecukier.net/wp-content/uploads/2011/02/largemap.png"><img src="http://www.jeromecukier.net/wp-content/uploads/2011/02/largemap.png" alt="" title="largemap" width="626" height="631" class="size-full wp-image-662" /></a></p>
<p>Now this map has two problems. First, it&#8217;s a choropleth with a discrete scale, but the values of adjacent areas can vary a lot. So, if you look at this portion of the map, what can be deduced on the values? not much I&#8217;m afraid.<br />
<a href="http://www.jeromecukier.net/wp-content/uploads/2011/02/choropleth.png"><img src="http://www.jeromecukier.net/wp-content/uploads/2011/02/choropleth.png" alt="" title="choropleth" width="123" height="132" class="aligncenter size-full wp-image-663" /></a></p>
<p>Second, it&#8217;s difficult to compare the marks on the map. Which region has the biggest? the smallest? how do two specific regions compare? with this representation, this type of question is even more difficult to answer than with a table.<br />
<a href="http://www.jeromecukier.net/wp-content/uploads/2011/02/marks-only.png"><img src="http://www.jeromecukier.net/wp-content/uploads/2011/02/marks-only.png" alt="" title="marks only" width="313" height="316" class="aligncenter size-full wp-image-664" /></a></p>
<p>Also these charts answer one partial question. So this one, here, shows which region exports most food products. But to where? and how about the imports and balance? now if one given view was the most relevant and could illustrate some important finding, it can be highlighted but here the website gives us collections of many of such maps. As a citizen I&#8217;m leaving no more informed than I was.</p>
<p>Not being the one to criticize without proposing an alternative, I whipped out an <strong>interactive exploratory tool of France trade flows</strong>.<br />
<a href="http://www.jeromecukier.net/wp-content/uploads/2011/02/franceexport.html" target=”_blank”><img src="http://www.jeromecukier.net/wp-content/uploads/2011/02/treemap.png" alt="" title="treemap" width="561" height="443" class="aligncenter size-full wp-image-668" /></a><br />
(The interactive vis is too wide to conveniently fit in a blog, but clicking on the image will open it in a new tab).</p>
<p>I don&#8217;t have access to the same dataset so I can&#8217;t show a strict equivalent. My data comes from <a href="http://comtrade.un.org/">COMTRADE</a>, the UN database of trade flows, and shows all exports and imports to France in 2009. They are not broken down by region or by type of company, but I got the flows by partner country and product category.<br />
The idea is that one can select something on one treemap to update the other. Also, it&#8217;s possible to alternate between a categorical view (where all groups of products and continents look neatly separated) and a view of the balance, which quickly shows which products or which countries get the bulk of French trade. </p>
<hr>
(technical explanation follows for those interested in the code proper)<br />
Now following last week&#8217;s <a href="http://www.jeromecukier.net/?p=426">tutorial</a>, of course it had to be done in <a href="http://www.protovis.org/">protovis</a>.<br />
Actually it illustrates some interesting principles of working with arrays, trees, maps etc. </p>
<p>First, I want to do as much data manipulation as possible in protovis as opposed to manually. So, my source <a href="http://www.jeromecukier.net/wp-content/uploads/2011/02/data.js">data</a> for the treemap is stored as an array of associative arrays, which is probably the preferred form in protovis. This is no different than, for instance, <a href="http://www.jeromecukier.net/?p=534">Protovis&#8217;s barley example</a>.<br />
Now how do you get something of the shape &#8211;</p>
<pre class="brush: jscript; title: ; notranslate">var data=
[{com:&quot;02&quot;,cat:0,cou:4,con:3,imp:0,exp:101421},
{com:&quot;03&quot;,cat:0,cou:4,con:3,imp:9716,exp:0},
{com:&quot;04&quot;,cat:0,cou:4,con:3,imp:0,exp:9272355},
{com:&quot;05&quot;,cat:0,cou:4,con:3,imp:531587,exp:0},
{com:&quot;07&quot;,cat:0,cou:4,con:3,imp:0,exp:83360},
...
{com:&quot;08&quot;,cat:0,cou:4,con:3,imp:0,exp:2779}</pre>
<p>to something shaped like a tree like:</p>
<pre class="brush: jscript; title: ; notranslate">var tree=
{0: {
       02: 101421,
       03: 0,
       04: 9272355,
       05: 0,
       07:83360},
...</pre>
<p>The solution is to use the rollup method. </p>
<p>First, if you look at my individual records, they are of the shape: </p>
<pre class="brush: jscript; light: true; title: ; notranslate">{com:&quot;04&quot;,cat:0,cou:4,con:3,imp:0,exp:9272355}</pre>
<p>where com is commodity code, cat is product category, cou is country, con is continent, imp is imports and exp is exports. </p>
<p>For any country + commodity combination, there will be <strong>only one record</strong>.<br />
What I&#8217;m interested to get in the tree I will use for the treemap are <strong>exports</strong>. That is what will determine the size of the leaves of the tree.</p>
<p>So&#8230;<br />
first I am going to nest my array:</p>
<pre class="brush: jscript; title: ; notranslate">var byProduct=pv.nest(data) 
	.key(function(d) {return d.cou;})
	.key(function(d) {return d.cat;})
	.key(function(d) {return d.com;})</pre>
<p>once I have written this I could follow up with a .entries() statement which would return me a nested array, or with rollup() which could give me the tree I need.<br />
Since, again, there is only one record for a combination of country (cou) and commodity (com), I can use any aggregation I want. </p>
<p>I define this function: </p>
<pre class="brush: jscript; title: ; notranslate">function rollup(data) {return pv.sum(data, function(d) {return d.exp;});} </pre>
<p>It returns the sum of all the export values. Since there is just one record, what it does is that it gives me the one export value I need in a tree form. </p>
<p>So the complete statement is:</p>
<pre class="brush: jscript; title: ; notranslate">function rollup(data) {return pv.sum(data, function(d) {return d.exp;});} 

var byProduct=pv.nest(data) 
	.key(function(d) {return d.cou;})
	.key(function(d) {return d.cat;})
	.key(function(d) {return d.com;})
	.rollup(rollup)</pre>
<p>This creates a tree, nested by country, then by product category, then by commodity. The corresponding values are the exports.</p>
<p>now creating my treemap data dynamically saves me a ton of hassle compared to trying to come up with a data file of the right shape and size, not mentioning the calculation errors which creep in each manual manipulation !</p>
<p>Another point of interestingness: how I computed the data to create the bar charts on the side.<br />
For the left treemap (and left bar chart) the user has selected a country. (and for the right ones, it&#8217;s a given product, but let&#8217;s focus on the left side, the reasoning is the same for the other side anyway).</p>
<p>so first I am going to take the tree we made earlier and just look at the selected country. We can do that with a statement like: </p>
<pre class="brush: jscript; title: ; notranslate">myProductTree=byProduct[selCountry];</pre>
<p>(so now we have a tree with just 2 levels, product category and commodity).</p>
<p>Now I can&#8217;t run pv.nest and all that on a tree. I need an array! so I have to use flatten to turn that section of the tree into a bona fide array which I will be able to further process. </p>
<pre class="brush: jscript; title: ; notranslate">catsByCountry = pv.flatten(myProductTree).key(&quot;cat&quot;).key(&quot;com&quot;).key(&quot;exp&quot;).array(); </pre>
<p>Here, note that the arguments: &#8220;cat&#8221;, &#8220;com&#8221;, &#8220;exp&#8221; are completely arbitrary. But, since I&#8217;m recreating the array almost as it originally was, I might as well use the same names for the keys. </p>
<p>So now, I have like a little subset of my original dataset, only the records of the selected country.<br />
I can now proceed to sum exports by categories using a standard rollup method, just as <a href="http://www.jeromecukier.net/?p=502">we&#8217;ve seen here</a>. </p>
<pre class="brush: jscript; title: ; notranslate">catsByCountry = pv.nest(catsByCountry).key(function(d) {return d.cat;}).rollup(rollup);</pre>
<p>Conveniently, the rollup function that I defined earlier sums the records! and here I do need summing, not any aggregation. </p>
<p>The problem is that the rollup() method creates an associative array, and if I need to use that in a bar chart I need a proper array! so, I use pv.values() which does just that, it creates an array out of the values of an associative array. </p>
<pre class="brush: jscript; title: ; notranslate">catsByCountry = pv.values(catsByCountry);</pre>
<p>Now the values can vary a lot in absolute terms depending on the selected country. This is why in the actual bar chart, I use pv.normalize() to have only values from 0 to 1 which are much more convenient to plot. </p>
<pre class="brush: jscript; title: ; notranslate">vis.add(pv.Bar)
	.data(function() pv.normalize(catsByCountry))</pre>
<p>one last thing, to save space in the data set (which means: bandwidth + loading time) I&#8217;ve used short keys in my data file, and I&#8217;ve used codes for countries, commodities and the like. </p>
<p>so I have this: </p>
<pre class="brush: jscript; light: true; title: ; notranslate">{com:&quot;04&quot;,cat:0,cou:4,con:3,imp:0,exp:9272355}</pre>
<p>instead of </p>
<pre class="brush: jscript; light: true; title: ; notranslate">{
    com:&quot;CEREALS,CEREAL PREPRTNS.&quot;,
    cat:&quot;Food and live animals&quot;,
    cou:&quot;Algeria&quot;,
    con:&quot;Africa&quot;,
    imp:0,exp:9272355}</pre>
<p>to get the names of the countries, categories etc. I have in my data file variables that associate, say, a country code to its long name, its continent etc.<br />
so I can have to write things like: </p>
<pre class="brush: jscript; title: ; notranslate">countries[&quot;4&quot;].name+&quot; (&quot;+continents[countries[&quot;4&quot;].continent]+&quot;)&quot;</pre>
<p>instead of something simpler, but it&#8217;s a good trade-off because writing those names in full in the original dataset inflates the size of the file to megabytes (there are approx 10.000 records).</p>
]]></content:encoded>
			<wfw:commentRss>/2011/02/18/la-france-qui-exporte/feed/</wfw:commentRss>
		<slash:comments>8</slash:comments>
		</item>
	</channel>
</rss>
